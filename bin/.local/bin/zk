#!/bin/sh
# zk - script to manage a minimal encrypted zettlekasten note repository

TMPDIR=/tmp/zk

encrypt() {
    # if we're still encrypted, just return
    if [ ! -d $TMPDIR ]; then
        return
    fi
    # tar up zk notes
    if ! tar cf $TMPDIR.tar --directory /tmp zk; then
        printf "%s\n" "unable to tar zk..."
        exit 1
    fi
    # and encrypt them
    if ! gpg --quiet --output $ZK_DIR/zk.tar.asc --yes --armor --sign --encrypt $TMPDIR.tar; then
        printf "%s\n" "unable to encrypt zk... try manually"
        exit 1
    fi
    shred -u $TMPDIR.tar
    rm -rf $TMPDIR
}

decrypt() {
    # if we already have the tmp dir, we're already decrypted
    if [ -d $TMPDIR ]; then
        return
    fi
    # otherwise, try to decrypt
    if ! gpg --quiet --output $TMPDIR.tar --decrypt $ZK_DIR/zk.tar.asc; then
        printf "%s\n" "unable to decrypt or verify zk... try manually"
        exit 1
    fi
    tar xf $TMPDIR.tar --directory /tmp && shred -u $TMPDIR.tar
}

# make sure user has valid zk repo
if [ -z "${ZK_DIR:-}" ]; then
    printf "%s\n" "ZK_DIR env variable not set, zettlekasten repo location unknown"
    exit 1
fi

# refresh zk repo
cd $ZK_DIR
git pull
cd - > /dev/null

# handle different user commands
case "$1" in
    "" | new)
        decrypt
        UUID=$(date --iso-8601=minutes)
        cd $TMPDIR
        cp ./zk.template "$UUID.md"
        (ZK_DIR=$TMPDIR $EDITOR "$UUID.md")
        cd - > /dev/null
        encrypt
        ;;
    journal)
        decrypt
        DAILY_TIMESTAMP=$(date --iso-8601=date)
        PRETTY_DATE=$(date +"%I:%M %P, %A, %B %d, %Y")
        cd $TMPDIR/journal
        printf "%s\n" "$PRETTY_DATE" >> "./$DAILY_TIMESTAMP.md"
        $EDITOR "./$DAILY_TIMESTAMP.md"
        cd - > /dev/null
        encrypt
        ;;
    push)
        encrypt
        cd $ZK_DIR
        git add zk.tar.asc && git commit -S -am "add zk" && git push origin main
        ;;
    enc)
        encrypt
        ;;
    dec)
        decrypt
        ;;
    *)
        printf "%s\n" \
            "usage: zk [cmd] (default new)" \
            "new - decrypt vault and create new zk" \
            "journal - create new (daily) timestamped journal entry" \
            "push - encrypt and push vault to remote" \
            "enc - encrypt vault" \
            "dec - decrypt vault"
        ;;
esac
